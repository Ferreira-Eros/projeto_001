Git:
  -n1 : Compartilhae versiona códigos.

Github :
  -n1 : Armazena os códigos.

Comandos:

git init - primeiro comando.

git status - relatório sobre os documentos da pasta. Se ta ou não no controle de versão ou se foi atualizado.

git add "" / . - "" adiciona um espécifico/ adiciona todos .

git commit -m"" - Falar o que foi feito no código. primeiro commit é o 'commit inicial' gera versão.

git push - upa o arquivo pro reposítorio o qual eu escolhi.

git remote origin <URL> - para destacar o link antes do push.

Ciclo de atualização de códigos:

Usa-se o commit para fazer o ciclo de atualização.

Git commit-m "" - Escrevo qual atualização eu fiz . EX: "Cadastro de usuário".

Ver Histórico de atualizações:

Git reflog - A versão atual sempre vai ser a versão do topo.

Navegando entre versões do código - Localmente:
Pra fazer isso usa-se o N-ID da versão que você que voltar : Lembrando que pra ver o código Git reflog

Git reset --hard ....

BRANCH:

Caminhos diferentes que seguimos no processo de desenvolvimento:

Cada branch armazena o versionamento do código.

Sempre há uma Branch principal, utilizando paralelas para auxiliar e facilitar o desenvolvimento.

git branch - mostra os branch existentes.
git branch .... - cria uma nova branch
git checkout .... - alterar a branch 

União de códigos;

Entrar na branch que eu quero unir os códigos
git pull - Trás as atualizações do global pro local.
git merge ... utilizando o nome da branch que eu quero as informações